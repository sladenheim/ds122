---
title: Common Continuous Distributions
author: "CDS DS-122<br>Boston University"
format: 
    revealjs:
        math: true
        css: 
        - styles.css
        html-math-method: mathjax
        highlight-style: github
        slide-number: true
        show-slide-number: all
        chalkboard: true 
---

## Why Common Continuous Distributions?
:::{style="font-size: .8em"}
Common continuous distributions help us answer questions like:

- What’s the chance a passenger waits less than 5 minutes for a bus? 
- What percent of students scored above 85 on a test?
- How long until the next customer arrives to a store?
:::


## Learning Objectives

:::{style="font-size: .8em"}

* Common continuous distributions:
    - Uniform distribution
    - Gaussian/normal distribution
    - Exponential distribution
* Overview of related continuous and discrete distributions

:::

## Best of the Best
:::{style="font-size: .8em"}
A college provides admission only on the basis of SAT and ACT scores. The college admin decides to give the top performer fellowship to the student who has performed the best among all applicants.

The admin knows that the SAT scores are normally distributed with mean 1000 and standard deviation 200, while the ACT scores are normally distributed with mean 20 and standard deviation 5. The highest score received from applicants who appeared for SAT is 1355 and the highest score received from applicants who appeared for ACT is 30.

Question: Help the college to choose the best candidate for the fellowship.
:::

## Uniform Distribution
:::{style="font-size: .75em"}
```{python}
from IPython.core.display import HTML

def generate_html():
    return r"""
    <div class="purple-box">
     <span class="label"> (Continuous) Uniform Distribution </span>
        <p>
       A random variable \(X\) follows a continuous uniform distribution on \(\small{[0,1]}\), if its PDF is given by

    $$\small{f(x) = \;\left\{\begin{array}{cr} 1 & \text{for  } 0\leq x \leq 1, \\ 0 & \text{otherwise. }\end{array}\right.}$$

    This is called uniform density on \(\small{[0,1]}.\) 

    For a general interval \(\small{[a,b]},\) this function would become 

    $$\small{f(x) = \;\left\{\begin{array}{cr} \frac{1}{b-a} & \text{for  } a\leq x \leq b, \\ 0 & \text{otherwise. }\end{array}\right.}$$
        </p>
    </div>
    """
html_content = generate_html()
display(HTML(html_content))
```
<!-- __Remark__: $a$ and $b$ are the parameters of the uniform distribution. -->
__Remark__: The expected value and the variance of a continuous uniform distribution are, respectively $\frac{a+b}{2} \text{ and } \frac{(b-a)^2}{12}.$
:::

## Uniform Distribution
:::{style="font-size: .8em"}
__Example__: Let $X$ be a continuous random variable that is uniformly distributed over $[0,10]$. <br>
a. Find the CDF of $X.$ <br>
$$
f(x) = 
\begin{cases}
\frac{1}{10} & \text{for } x \in [0, 10] \\\\
0 & \text{otherwise}
\end{cases}
$$

To find the CDF, $F(x) = P(X \leq x)$, we integrate the PDF from 0 to $x$:
$$
F(x) = 
\begin{cases}
0 & x < 0 \\\\
\int_0^x \frac{1}{10} \, dt = \frac{x}{10} & 0 \leq x \leq 10 \\\\
1 & x > 10
\end{cases}
$$
:::

## Uniform Distribution
:::{style="font-size: .8em"}
__Example (continues)__: <br>
b. Find $E[X].$ <br>
We can find $E[X]$ directly using the formula for the mean of the continuous uniform distribution:
$$E[X]= \frac{0+10}{2} = 5.$$
Alternatively, we can integrate $x \cdot f(x)$ from 0 to 10.
\begin{align*}
E[X] &= \int_{-\infty}^{\infty} x f(x) \:dx = \int_0^{10} x \cdot \frac{1}{10-0} dx = \frac{1}{10} \int_0^{10} x \:dx \\
& =\frac{1}{10}\cdot \frac{1}{2} \left[x^2\right]_{x=0}^{x=10} = \frac{1}{20} \cdot 100 = 5.
\end{align*}
:::

## Uniform Distribution
:::{style="font-size: .8em"}
__Example__: Buses arrive at a specified stop at 15-minute intervals starting at 7 am. That is, they arrive at 7, 7:15, 7:30, 7:45, and so on. If a passenger arrives at the stop at a time that is uniformly distributed between 7 and 7:30, find the probability that he waits less than 5 minutes for a bus.<br>
Let $X$ denote the number of minutes past 7 that the passenger arrives at the stop. Since $X$ is a uniform random variable over the interval $(0, 30)$, it follows that the passenger will have to wait less than 5 minutes if (and only if) he arrives between 7:10 and 7:15 or between 7:25 and 7:30. Hence, the desired probability is 

\begin{align*}
P(10 < X < 15) + P(25 < X < 30) &= \int_{10}^{15} \frac{1}{30} dx + \int_{25}^{30} \frac{1}{30} dx\\
& = \frac{1}{30} (5+5) = \frac{1}{3}.
\end{align*}
:::

## Uniform Distribution
:::{.center-text}
```{python}
#| echo: true
from scipy.stats import uniform

# Boundaries of [0, 30]
a = 0
b = 30

# Compute P(10 < X < 15) and P(25 < X < 30)
p1 = uniform.cdf(15, loc=a, scale=b - a) - uniform.cdf(10, loc=a, scale=b - a)
p2 = uniform.cdf(30, loc=a, scale=b - a) - uniform.cdf(25, loc=a, scale=b - a)

# Total probability
total_probability = p1 + p2
print(f"The desired probability is: {total_probability}")
```
:::

## Gaussian Distribution
:::{style="font-size: .8em"}
The Gaussian distribution has two parameters: the mean and the variance, $\mu$ and $\sigma$, respectively. 
:::
:::{.columns}
::: {.column width="68%"}
:::{style="font-size: .8em"}
```{python}
from IPython.core.display import HTML

def generate_html():
    return r"""
    <div class="purple-box">
     <span class="label"> Gaussian Distribution (Normal Distribution)</span>
        <p>
       A random variable \(X\) is normally distributed, with parameters \(\mu\) and \(\sigma^2\), \(X \sim N(\mu, \sigma^2),\) if the PDF of \(X\) is given by
       $$ f_{\mu,\sigma}(x) = \frac{1}{\sigma \sqrt{2 \pi}} e^{-\frac{1}{2}\left(\frac{x-\mu}{\sigma}\right)^2}. $$
        </p>
    </div>
    """
html_content = generate_html()
display(HTML(html_content))
```
:::
:::

::: {.column width="32%"}
:::{.center-text}
<img src="images/common distributions/Galton-Bean-Machine.png" width=300/>

:::
:::
:::

## Gaussian Distribution
:::{style="font-size: .8em"}
__Remark__: The _standard Gaussian_ distribution has mean zero and a variance (and standard deviation)
of 1.   The PDF of the standard Gaussian is:

$$ \small{f(x) = \frac{1}{\sqrt{2 \pi}} e^{-x^2/2}. }$$
:::

:::{.columns}
::: {.column width="50%"}
```{python}
import numpy as np
import matplotlib.pyplot as plt
from scipy.stats import norm
plt.figure(figsize=(5, 3.5))
x = np.linspace(norm.ppf(0.001), norm.ppf(0.999), 100)
plt.plot(x, norm.pdf(x),'b-', lw = 5, alpha = 0.6)
plt.title(r'Standard Gaussian PDF,  $\mu = 0, \sigma = 1$', size=18)
plt.xlabel('x', size=16)
plt.ylabel(r'$p(x)$', size=16);
```
:::

::: {.column width="50%"}
```{python}
plt.figure(figsize=(5, 3.5))
x = np.linspace(norm.ppf(0.001), norm.ppf(0.999), 100)
plt.plot(x, norm.cdf(x),'b-', lw = 5, alpha = 0.6)
plt.title(r'Standard Gaussian CDF.  $\mu = 0, \sigma = 1$', size=18)
plt.xlabel('x', size=16)
plt.ylabel(r'$P[X\leq x]$', size=16);
```
:::
:::

## Gaussian Distribution
:::{style="font-size: .8em"}
__Example__: Suppose the time it takes for a person to commute to work is normally distributed with mean 30 minutes and standard deviation 5 minutes. What’s the probability the commute takes more than 40 minutes?

```{python}
#| echo: true
from scipy.stats import norm

# Parameters
mean = 30
std_dev = 5

# Calculate P(X > 40)
prob_more_than_40 = 1 - norm.cdf(40, loc=mean, scale=std_dev)

print(f"The desired probability is {prob_more_than_40:.4f}")

```

:::

## Exponential Distribution
:::{style="font-size: .8em"}
The exponential distribution concerns a Poisson process and has one parameter, $\lambda$, the rate of success.
```{python}
from IPython.core.display import HTML

def generate_html():
    return r"""
    <div class="purple-box">
     <span class="label"> Exponential Distribution</span>
     <p>
      A continuous random variable whose PDF is given, for some \(\lambda > 0,\) by

        $$f(x) = \;\left\{\begin{array}{cr} \lambda e^{-\lambda x} & \text
        {for  } x \geq 0, \\ 0 & \text{otherwise}\end{array}\right.$$

        is exponentially distributed with parameter \(\lambda.\)
        </p>
    </div>
    """
html_content = generate_html()
display(HTML(html_content))
```
__Remark__: The mean of the exponential distribution is $1/\lambda$, and the variance is $1/\lambda^2$. Its CDF, $F(a)$, is given by
$$\small{F(a) = P(X \leq x) = 1 - e^{-\lambda x} \mbox{ for } x \geq 0.}$$ 
:::

## Exponential Distribution
:::{style="font-size: .8em"}
The exponential distribution answers the question: "What is the probability it takes time $x$ to obtain the first success?''

The exponential is the continuous analog of the geometric distribution.
:::

:::{.center-text}
```{python}

from scipy.stats import expon, geom
from math import exp

# Parameters
lam = 0.3
p = 1 - exp(-lam)

# Exponential CDF values
x = np.linspace(expon.ppf(0, scale=1/lam), expon.ppf(0.995, scale=1/lam), 100)

# Geometric CDF values
xg = np.arange(geom.ppf(0, p), geom.ppf(0.995, p))

# Plotting
plt.figure(figsize=(10, 5))
plt.plot(x, expon.cdf(x, scale=1/lam), 'b-', lw=5, alpha=0.6, label='Exponential')
plt.plot(xg, geom.cdf(xg, p), 'ro', ms=8, label='Geometric')
plt.ylim([0, 1])
plt.xlim([-0.5, max(xg)])
plt.xlabel(r'$x$', size=18)
plt.ylabel(r'$P(X \leq x)$', size=18)
plt.legend(loc='best', prop={'size': 18})
plt.yticks(fontsize=16)
plt.xticks(fontsize=16)
plt.tight_layout()
plt.show()

```
:::

## Exponential Distribution
:::{style="font-size: .8em"}
__Example__: Suppose a small business receives phone calls at a steady average rate of 6 calls per hour. <br>
What’s the probability that the next call comes within 5 minutes?
:::
:::{.center-text}
```{python}
#| echo: true
from scipy.stats import expon

# Rate of phone calls: 6 per hour => lambda = 6
# Convert to minutes: lambda = 6 / 60 = 0.1 per minute
rate_per_minute = 0.1

# Probability that the next call comes within 5 minutes
prob_within_5 = expon.cdf(5, scale=1/rate_per_minute)
print(f"The desired probability is {prob_within_5:.4f}")

```
:::

## Overview of Distributions
:::{style="font-size: .8em"}
In the last two lectures we introduced the binomial, geometric, Poisson, and exponential distributions. Each of these four distributions describes either 

* Bernoulli trials with  probability $p$, or
* Poisson process with  rate $\lambda$.

In addition, each of the four distributions answers one of the following questions:

1. Given that a success has just occured, how many trials or how long until the next success?
2. In a fixed number of trials or amount of time, how many successes occur?
:::

## Overview of Distributions
:::{style="font-size: .8em"}

| |  Time (or Number of Trials) Until Success| Number of Successes in Fixed Time (or Number of Trials)  |
|-|:--:|:--:|
|__Bernoulli trials__| Geometric| Binomial |
|__Poisson process__| Exponential | Poisson|
:::

## Best of the Best
:::{style="font-size: .8em"}
```{python}
fig, (ax1, ax2) = plt.subplots(1,2, figsize = (13,4))
x = np.linspace(400, 1600, 1000)
ax1.plot(x, norm.pdf(x, loc = 1000, scale = 200), color = 'b')
ax1.set_title('SAT scores', size=20)
ax1.set_xlabel('Score', size=18)
ax1.set_ylabel('Probability', size=18)
ax1.axvline(1355, ymax = 0.23, linestyle = '--', color = 'black')
x1 = np.linspace(1, 36, 100)
ax2.plot(x1, norm.pdf(x1, loc = 20, scale = 5), color = 'r')
ax2.set_title('ACT scores', size=20)
ax2.set_xlabel('Score', size=18)
ax2.set_ylabel('Probability', size=18)
ax2.axvline(30, ymax = 0.18, linestyle = '--', color = 'black')
plt.yticks(fontsize=16)
plt.xticks(fontsize=16)
plt.show()
```
:::

## Best of the Best
:::{style="font-size: .8em"}
```{python}
#| echo: true
# Find the Z-score of highest scorer in the SAT exam
sat_top = (1355 - 1000) / 200
print(f"The Z-score of highest scorer in the SAT among all the applicants is equal to {sat_top:.2f}.")

# Find the Z-score of highest scorer in the ACT exam
act_top = (30 - 20) / 5
print(f"The Z-score of highest scorer in the ACT among all the applicants is equal to {act_top:.2f}.")

```
:::{.center-text}
```{python}
# Create a smaller figure
fig, ax = plt.subplots(figsize=(5, 3))  # Adjusted size
x = np.linspace(-4, 4, 500)
ax.plot(x, norm.pdf(x, loc=0, scale=1), color='b')
ax.set_title('Standard Normal Distribution', size=20)
ax.set_xlabel('Z-score', size=18)
ax.set_ylabel('Probability', size=18)
ax.axvline(sat_top, ymax=0.25, linestyle='--', color='green', label='Highest SAT score')
ax.axvline(act_top, ymax=0.16, linestyle='-.', color='black', label='Highest ACT score')
#plt.legend(loc='best', prop={'size': 18})
plt.tight_layout()
plt.show()

```
:::

:::{style="font-size: .8em"}
The person with the highest ACT score should receive the fellowship, because his Z-score is higher.
:::
:::

## Group Question 1
:::{style="font-size: .8em"}
```{python}
from IPython.core.display import HTML

def generate_html():
    return r"""
    <div class="blue-box">
        <p>
Buses arrive at a specified stop at 15-minute intervals starting at 7 am. That is, they arrive at 7, 7:15, 7:30, 7:45, and so on. If a passenger arrives at the stop at a time that is uniformly distributed between 7 and 7:30, find the probability that he waits more than 10 minutes for a bus.
    <br>
    <br>
    <br>
    <br>
    <br>
    <br>
    <br>
    <br>
        </p>
    </div>
    """
html_content = generate_html()
display(HTML(html_content))
```
:::

## Group Question 2
:::{style="font-size: .8em"}
```{python}
from IPython.core.display import HTML

def generate_html():
    return r"""
    <div class="blue-box">
        <p>
Suppose that the length of a customer service at a store in minutes is an exponential random variable
with parameter \(\alpha = 1/10.\)  If someone arrives immediately ahead of you at a store, find the probability that you will have to wait between 10 and 20 minutes.
    <br>
    <br>
    <br>
    <br>
    <br>
    <br>
    <br>
    <br>
        </p>
    </div>
    """
html_content = generate_html()
display(HTML(html_content))
```
:::

:::{.notes}
Let $X$ represent the waiting time. Then $X$ is an exponential random variable with $\alpha = 1/10.$
Then the desired probability is equal to 
$$P(10<X<20) = 1- e^{-20/10} - (1 - e^{-10/10}) = e^{-1} - e^{-2} = 0.233.$$
:::


